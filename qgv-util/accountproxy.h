/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c AccountProxy -p accountproxy.h:accountproxy.cpp org.freedesktop.Telepathy.Account.xml org.freedesktop.Telepathy.Account
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef ACCOUNTPROXY_H_1281149702
#define ACCOUNTPROXY_H_1281149702

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freedesktop.Telepathy.Account
 */
class AccountProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.Telepathy.Account"; }

public:
    AccountProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~AccountProxy();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> Reconnect()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Reconnect"), argumentList);
    }

    inline QDBusPendingReply<> Remove()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Remove"), argumentList);
    }

    inline QDBusPendingReply<QStringList> UpdateParameters(const QVariantMap &Set, const QStringList &Unset)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(Set) << qVariantFromValue(Unset);
        return asyncCallWithArgumentList(QLatin1String("UpdateParameters"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void AccountPropertyChanged(const QVariantMap &in0);
    void Removed();
};

namespace org {
  namespace freedesktop {
    namespace Telepathy {
      typedef ::AccountProxy Account;
    }
  }
}
#endif
